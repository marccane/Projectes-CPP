#include <iostream>
#include <math.h>
#include <iomanip>

#define EsPositiuGeneral EspositiuVariable //Creume, això era la manera més maca de fer-ho (o la menys lletga, depèn de com ho miris)

using namespace std;

bool EspositiuVariable(double x, double coef[]){
    return (

            5*pow(x,5)-9*pow(x,4)+23*pow(x,3)-15*pow(x,2)+16*x+4 //! Introdueix aqui la funció desitjada

            > 0);
}

/*
void BuscarInterval(double a, double b, double c, double d, double &intervalalt, double &intervalbaix){
    while(!canvidesigne(intervalalt, intervalbaix)){ //buscar un canvi de signe (zero)
        intervalalt+=sumatori;
        intervalbaix-=sumatori;
        sumatori*=10;
    }
}
*/

int calculariteracions(double alt, double baix, int var){
    double b=alt, a=baix, error=pow(10,-var),temp;
    //temp=log((b-a)/error)/log(2);
    int resultat=log((b-a)/error)/log(2.0);
    resultat++;
    return resultat;
}

string CorretgirString(string frase){
    string *estil=&frase;
    const short unsigned ao=133, eo=138, et=130, it=161, oo=149, ot=162, u=163;
    const short cao=-32, ceo=-24, cet=-23, cit=-19, coo=-14, cot=-13, cu=-6;
    for(unsigned i=0; i<estil->length(); i++){
        switch(frase[i]){
        case cao:
            frase[i]=ao;
            break;
        case ceo:
            frase[i]=eo;
            break;
        case cet:
            frase[i]=et;
            break;
        case cit:
            frase[i]=it;
            break;
        case coo:
            frase[i]=oo;
            break;
        case cot:
            frase[i]=ot;
            break;
        case cu:
            frase[i]=u;
            break;
        }
    }
    return frase;
}

bool EspositiuSin(double x, double coef[]){//retorna si sin x + coef[0]*x + coef[1] > 0
    return (sin(x)+coef[0]*x+coef[1] > 0);
}

bool EspositiuCos(double x, double coef[]){
    //cout<<"x="<<x<<" "<<"temp="<<temp<<endl;
    return (x*x-cos(x)-2 > 0);
}

double Bolzano(int iteracions, double valornegatiu, double valorpositiu, double coef[]){ //pot funcionar per iteracions o es pot implementar un error maxim (hardcodejat o entrat)
    double intervalmig;    bool espositiu;
    //cout<<"iteracions, neg, pos, mig, espos(bool)"<<endl;
    for(int i=0; i<=iteracions; i++){
        intervalmig=(valornegatiu+valorpositiu)/2;
        espositiu=EsPositiuGeneral (intervalmig, coef);
        cout<<i<<" Neg="<<valornegatiu<<" Pos="<<valorpositiu<<" Mig="<<intervalmig<<" f(mig)>0 ="<<espositiu<<endl<<endl;
        if(espositiu)valorpositiu=intervalmig;
        else valornegatiu=intervalmig;
        //cout<<i<<" "<<setprecision(15)<<intervalmig<<" "<<espositiu<<endl;
    }
    return intervalmig;
}

//Aquest programa aproxima una equacio de 3r grau usnt el mètode
//de Bolzano. És lleig i poc eficient pero es pot implementar amb poc codi

int main(){
    double resultat, coeficients[10], intervalalt, intervalbaix;
    int iteracions, error, precissio; char decisio;

    cout<<CorretgirString("Aquest programa calcula zeros de funcions amb l'ineficient mètode de Bolzano")<<endl<<endl;
    cout<<"Interval Alt? ";
    cin>>intervalalt;
    cout<<"Interval Baix? ";
    cin>>intervalbaix;
    cout<<CorretgirString("Vols entrar el nombre d'iteracions o l'error màxim? (i/e): ");
    cin>>decisio;
    if(decisio=='i'){
        cout<<"Iteracions? (100 max): ";
        cin>>iteracions;
        if(iteracions>100){iteracions=100; cout<<"Masses iteracions, reduit a 100"<<endl;}
    }
    else{cout<<CorretgirString("Error màxim? (Error=10^-X) Entra només la X: ");
        cin>>error;
        iteracions=calculariteracions(intervalalt,intervalbaix,error);
    }
    cout<<CorretgirString("Precissió? (15 max): ");
    cin>>precissio;
    if(precissio>16)precissio=15; //està fet aposta, no és un bug
    cout<<setprecision(precissio);

    //intervalalt=2; intervalbaix=0; iteracions=30; //No importen massa els intervals inicials, tampoc se com ajustarlos a un possible resultat
    //error=4; // Aqui has de posar la precissió que vols en el format:
    // 10^-(AIXO) només has d'escriure el que aniria dins els parèntesis

    if(EsPositiuGeneral (intervalalt,coeficients) and !EsPositiuGeneral (intervalbaix,coeficients) )
        cout<<"Todo correcto? Y yo que me alegro"<<endl<<endl;
    else {cout<<"L'interval no conte cap arrel"<<endl; return 1;}
    //buscarinterval();
    resultat=Bolzano(iteracions,intervalbaix,intervalalt,coeficients);
    cout<<"Resultat="<<resultat<<endl;
    //cout<<sin(resultat)+coeficients[0]*resultat+coeficients[1];
    //cout<<resultat*resultat-cos(resultat)-2;
    return 0;
}
